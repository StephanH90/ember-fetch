{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import { macroCondition, isTesting } from '@embroider/macros';\nimport { assert } from '@ember/debug';\nimport { waitForPromise } from '@ember/test-waiters'\n\nlet setupFetchWaiter;\n\nif (macroCondition(isTesting())) {\n  let isSetup = false;\n  setupFetchWaiter = () => {\n    assert('Do not call setupFetchWaiter more than once, its not needed', !isSetup);\n\n    let realFetch = globalThis.fetch;\n    globalThis.fetch = (...args) => waitForPromise(realFetch(...args));\n\n    isSetup = true;\n  }  \n} else {\n  // do nothing if we're not testing.\n  setupFetchWaiter = () => {};\n}\n\nexport { setupFetchWaiter };"],"names":["setupFetchWaiter","macroCondition","isTesting","isSetup","assert","realFetch","globalThis","fetch","args","waitForPromise"],"mappings":";;;;AAIA,IAAIA,iBAAgB;AAEpB,IAAIC,cAAc,CAACC,SAAS,EAAE,CAAC,EAAE;EAC/B,IAAIC,OAAO,GAAG,KAAK,CAAA;EACnBH,gBAAgB,GAAGA,MAAM;AACvBI,IAAAA,MAAM,CAAC,6DAA6D,EAAE,CAACD,OAAO,CAAC,CAAA;AAE/E,IAAA,IAAIE,SAAS,GAAGC,UAAU,CAACC,KAAK,CAAA;AAChCD,IAAAA,UAAU,CAACC,KAAK,GAAG,CAAC,GAAGC,IAAI,KAAKC,cAAc,CAACJ,SAAS,CAAC,GAAGG,IAAI,CAAC,CAAC,CAAA;AAElEL,IAAAA,OAAO,GAAG,IAAI,CAAA;GACf,CAAA;AACH,CAAC,MAAM;AACL;AACAH,EAAAA,gBAAgB,GAAGA,MAAM,EAAE,CAAA;AAC7B;;;;"}